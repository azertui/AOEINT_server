syntax = "proto3";

package communication;

///////////////////////////////////////////////////////////////////////////////
// Service de test de connection
///////////////////////////////////////////////////////////////////////////////

service Hello {
  // Fonction servant juste au test de connection
  rpc SayHello (HelloRequest) returns (HelloReply) {}
}

message HelloRequest {}
message HelloReply {}

///////////////////////////////////////////////////////////////////////////////
// Service de gestion des NPC
///////////////////////////////////////////////////////////////////////////////

service Interactions {
  // Fonction transmettant un click du client au serveur
  rpc RightClick (RightClickRequest) returns (RightClickReply) {}

  // Fonction permettant au client de demander les mises à jour
  rpc AskUpdate (AskUpdateRequest) returns (AskUpdateReply) {}

}

// Messages liés à RightClick
message RightClickRequest {
  Coordinates coordinates = 1;
  repeated string entitySelectionUUID = 2;
  string target = 3;
}
message RightClickReply {}

// Message liés à MoveTo
message AskUpdateRequest {
    string token = 1;
}
message AskUpdateReply {
    // Si vide rien
    repeated UpdateAsked array = 1;
}

// Message de structure du service Interactions
message Coordinates {
  int32 x = 1;
  int32 y = 2;
}

/*
    type: list
        - 0: vide
        - 1: case carte
            - type: int
                - 0: eau
                - 1: herbe
        - 2: case ressource
            - type: int
                - 0: bois
                - 1: pierre
        - 3: case entité
            - x: int
            - y: int
            - xDest: int
            - yDest: int
            - hp: int
            - hpMax: int
            - name: string

    */
message UpdateAsked {
    int32 type = 1;
    string entityUUID = 2;
    repeated Param arg = 3;
}

message Param {
    string key = 1;
    string value = 2;
}
