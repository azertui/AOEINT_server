syntax = "proto3";

package communication;

///////////////////////////////////////////////////////////////////////////////
// Service de test de connection
///////////////////////////////////////////////////////////////////////////////

service Hello {
  // Fonction servant juste au test de connection
  rpc sayHello (HelloRequest) returns (HelloReply) {}
}

message HelloRequest {}
message HelloReply {}

///////////////////////////////////////////////////////////////////////////////
// Service de gestion du contenu de la carte
///////////////////////////////////////////////////////////////////////////////

service Map {
  // Fonction permettant au client de demander une zone de carte
  rpc getMap (getMapRequest) returns (getMapReply) {}

  // Fonction permettant au client de faire une modification d'une zone de carte
  rpc setMap (setMapRequest) returns (setMapReply) {}

  // Fonction permettant au serveur de mettre à jour une zone de carte du client
  rpc updateMap(updateMapRequest) returns (updateMapReply) {}

}

// Messages liés à getMap
message getMapRequest {
  int32 x = 1;
  int32 y = 2;
  int32 width = 3;
  int32 height = 4;
}
message getMapReply {
  repeated Zone map = 1;
}

// Messages liés à setMap
message setMapRequest {
  int32 x = 1;
  int32 y = 2;
  int32 width = 3;
  int32 height = 4;
  repeated Zone map = 5;
}
message setMapReply {}

// Messages liés à updateMap
message updateMapRequest {
  int32 x = 1;
  int32 y = 2;
  int32 width = 3;
  int32 height = 4;
  repeated Zone map = 5;
}
message updateMapReply {}

// Message de structure d'organisation de la carte
message Zone {
  int32 type = 1;
  Resource resource = 2;
  Building building = 3;
}
message Resource {
  int32 ph = 1;
  int32 type = 2;
}
message Building {
  int32 ph = 1;
  int32 type = 2;
  int32 width = 3;
  int32 height = 4;
}

///////////////////////////////////////////////////////////////////////////////
// Service de gestion des NPC
///////////////////////////////////////////////////////////////////////////////

service Interactions {
  // Fonction transmettant un click du client au serveur
  rpc rightClick (rightClickRequest) returns (rightClickReply) {}

  // Fonction permettant au client de demander le chemin à un endroit
  rpc moveTo (moveToRequest) returns (moveToReply) {}

}

// Messages liés à rightClick
message rightClickRequest {
  Coordinates coordinates = 1;
}
message rightClickReply {}

// Message liés à moveTo
message moveToRequest {
  Coordinates actuel = 1;
  Coordinates destionation = 2;
}
message moveToReply {
  repeated Coordinates chemin = 1;
}

message Coordinates {
  int32 x = 1;
  int32 y = 2;
}